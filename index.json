[{"content":"这是第一篇内容！\nEmoj：🧡💥💢💌💝🕎☪\nHugo 默认是使用 TOML，现在将此更改为更易阅读的 YAML。 Hugo 需要在源目录查找一个 config.toml 的配置文件。如果这个文件不存在，将会查找 config.yaml，然后是 config.json\nHogu 文档：https://adityatelange.github.io/hugo-PaperMod/\n增加公式支持：https://mertbakir.gitlab.io/hugo/math-typesetting-in-hugo/\n添加站内搜索功能。\nSearch Page PaperMod uses Fuse.js Basic for seach functionality\nAdd the following to site config, config.yml\noutputs:  home:  - HTML  - RSS  - JSON # is necessary Create a page with search.md in content directory with following content\n--- title: \u0026#34;Search\u0026#34; # in any language you want layout: \u0026#34;search\u0026#34; # is necessary # url: \u0026#34;/archive\u0026#34; # description: \u0026#34;Description for Search\u0026#34; summary: \u0026#34;search\u0026#34; --- To hide a particular page from being searched, add it in post’s fron’t matter\n--- searchHidden: true copy\nex: [search.md]\n添加 Archives 功能 https://adityatelange.github.io/hugo-PaperMod/posts/papermod/papermod-features/\n1 测试目录\n2 测试目录\n3 测试目录\n测试代码\nimport sys from PyQt5 import QtCore, QtGui, QtWidgets, uic from PyQt5.QtCore import Qt, QEvent import random  from PyQt5.QtGui import QPixmap from PyQt5.QtWidgets import QAction, QFileDialog   class Canvas(QtWidgets.QLabel):  def __init__(self, parent=None):  super().__init__(parent)  self.background = QPixmap(200, 200)  self.background.fill(Qt.yellow)  # self.clear(Qt.yellow)  self.last_x, self.last_y = None, None  self.pen_color = QtGui.QColor(\u0026#39;#000000\u0026#39;)  self.setPixmap(self.background)   def mouseMoveEvent(self, event):  print(event.button())  print(f\u0026#34;Qt.LeftButton: ({Qt.LeftButton})\u0026#34;)  print(f\u0026#34;Qt.RightButton: ({Qt.RightButton})\u0026#34;)  # print(f\u0026#34;width: {self.width()}, height: {self.height()}\u0026#34;)  # if event.button() == Qt.LeftButton:  if self.last_x is None: # First event.  self.last_x = event.x()  self.last_y = event.y()  return # Ignore the first time.  #  # painter = QtGui.QPainter(self.pixmap())  painter = QtGui.QPainter(self)  p = painter.pen()  p.setWidth(4)  p.setColor(self.pen_color)  painter.setPen(p)  painter.drawLine(self.last_x, self.last_y, event.x(), event.y())  print(f\u0026#34;({event.x(), event.y()})\u0026#34;)  painter.end()  self.update()   # Update the origin for next time.  self.last_x = event.x()  self.last_y = event.y()   def mouseReleaseEvent(self, e):  self.last_x = None  self.last_y = None ","permalink":"http://landodo.github.io/first-post/","summary":"这是第一篇内容！ Emoj：🧡💥💢💌💝🕎☪ Hugo 默认是使用 TOML，现在将此更改为更易阅读的 YAML。 Hugo 需要在源目录查找一个 config.toml 的配置文件。如果这个","title":"First Post"}]